<?xml version="1.0" encoding="UTF-8"?><testrun name="EquityTest" project="Java101BASICS" tests="22" started="22" failures="0" errors="1" ignored="0">
  <testsuite name="com.local.financialtest.EquityTest" time="0.009" displayname="EquityTest" uniqueid="[engine:junit-jupiter]/[class:com.local.financialtest.EquityTest]">
    <testcase name="testGetAssetType" classname="com.local.financialtest.EquityTest" time="0.003" displayname="testGetAssetType()" uniqueid="[engine:junit-jupiter]/[class:com.local.financialtest.EquityTest]/[method:testGetAssetType()]"/>
    <testcase name="testInstanceofEquityVolume" classname="com.local.financialtest.EquityTest" time="0.0" displayname="testInstanceofEquityVolume()" uniqueid="[engine:junit-jupiter]/[class:com.local.financialtest.EquityTest]/[method:testInstanceofEquityVolume()]"/>
    <testcase name="testGetPrice" classname="com.local.financialtest.EquityTest" time="0.0" displayname="testGetPrice()" uniqueid="[engine:junit-jupiter]/[class:com.local.financialtest.EquityTest]/[method:testGetPrice()]"/>
    <testcase name="testSetDateTime" classname="com.local.financialtest.EquityTest" time="0.0" displayname="testSetDateTime()" uniqueid="[engine:junit-jupiter]/[class:com.local.financialtest.EquityTest]/[method:testSetDateTime()]"/>
    <testcase name="testSetCompany" classname="com.local.financialtest.EquityTest" time="0.0" displayname="testSetCompany()" uniqueid="[engine:junit-jupiter]/[class:com.local.financialtest.EquityTest]/[method:testSetCompany()]"/>
    <testcase name="testGetDateTime" classname="com.local.financialtest.EquityTest" time="0.0" displayname="testGetDateTime()" uniqueid="[engine:junit-jupiter]/[class:com.local.financialtest.EquityTest]/[method:testGetDateTime()]"/>
    <testcase name="testInstrumentMap" classname="com.local.financialtest.EquityTest" time="0.001" displayname="testInstrumentMap()" uniqueid="[engine:junit-jupiter]/[class:com.local.financialtest.EquityTest]/[method:testInstrumentMap()]"/>
    <testcase name="testGetCost" classname="com.local.financialtest.EquityTest" time="0.0" displayname="testGetCost()" uniqueid="[engine:junit-jupiter]/[class:com.local.financialtest.EquityTest]/[method:testGetCost()]"/>
    <testcase name="testGetName" classname="com.local.financialtest.EquityTest" time="0.0" displayname="testGetName()" uniqueid="[engine:junit-jupiter]/[class:com.local.financialtest.EquityTest]/[method:testGetName()]"/>
    <testcase name="testGetIdentifier" classname="com.local.financialtest.EquityTest" time="0.0" displayname="testGetIdentifier()" uniqueid="[engine:junit-jupiter]/[class:com.local.financialtest.EquityTest]/[method:testGetIdentifier()]"/>
    <testcase name="testSetAssetPrice" classname="com.local.financialtest.EquityTest" time="0.0" displayname="testSetAssetPrice()" uniqueid="[engine:junit-jupiter]/[class:com.local.financialtest.EquityTest]/[method:testSetAssetPrice()]"/>
    <testcase name="testInstrument" classname="com.local.financialtest.EquityTest" time="0.0" displayname="testInstrument()" uniqueid="[engine:junit-jupiter]/[class:com.local.financialtest.EquityTest]/[method:testInstrument()]"/>
    <testcase name="testSetIdentifier" classname="com.local.financialtest.EquityTest" time="0.0" displayname="testSetIdentifier()" uniqueid="[engine:junit-jupiter]/[class:com.local.financialtest.EquityTest]/[method:testSetIdentifier()]"/>
    <testcase name="testGetCompany" classname="com.local.financialtest.EquityTest" time="0.0" displayname="testGetCompany()" uniqueid="[engine:junit-jupiter]/[class:com.local.financialtest.EquityTest]/[method:testGetCompany()]"/>
    <testcase name="testSetTicker" classname="com.local.financialtest.EquityTest" time="0.001" displayname="testSetTicker()" uniqueid="[engine:junit-jupiter]/[class:com.local.financialtest.EquityTest]/[method:testSetTicker()]"/>
    <testcase name="testEquity" classname="com.local.financialtest.EquityTest" time="0.0" displayname="testEquity()" uniqueid="[engine:junit-jupiter]/[class:com.local.financialtest.EquityTest]/[method:testEquity()]"/>
    <testcase name="testSetVolume" classname="com.local.financialtest.EquityTest" time="0.0" displayname="testSetVolume()" uniqueid="[engine:junit-jupiter]/[class:com.local.financialtest.EquityTest]/[method:testSetVolume()]"/>
    <testcase name="testGetTicker" classname="com.local.financialtest.EquityTest" time="0.0" displayname="testGetTicker()" uniqueid="[engine:junit-jupiter]/[class:com.local.financialtest.EquityTest]/[method:testGetTicker()]"/>
    <testcase name="testGetVolume" classname="com.local.financialtest.EquityTest" time="0.0" displayname="testGetVolume()" uniqueid="[engine:junit-jupiter]/[class:com.local.financialtest.EquityTest]/[method:testGetVolume()]"/>
    <testcase name="testSetCost" classname="com.local.financialtest.EquityTest" time="0.004" displayname="testSetCost()" uniqueid="[engine:junit-jupiter]/[class:com.local.financialtest.EquityTest]/[method:testSetCost()]">
      <error>java.lang.ArithmeticException: Cost cannot be below 0.00&#13;
	at com.local.lessson.financialclass.Equity.setCost(Equity.java:63)&#13;
	at com.local.financialtest.EquityTest.testSetCost(EquityTest.java:195)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:686)&#13;
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:205)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:201)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:71)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at java.util.ArrayList.forEach(Unknown Source)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at java.util.ArrayList.forEach(Unknown Source)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:141)&#13;
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:98)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:41)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:542)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:770)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:464)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:210)&#13;
&#13;
</error>
    </testcase>
    <testcase name="testSetName" classname="com.local.financialtest.EquityTest" time="0.0" displayname="testSetName()" uniqueid="[engine:junit-jupiter]/[class:com.local.financialtest.EquityTest]/[method:testSetName()]"/>
    <testcase name="testSetPrice" classname="com.local.financialtest.EquityTest" time="0.0" displayname="testSetPrice()" uniqueid="[engine:junit-jupiter]/[class:com.local.financialtest.EquityTest]/[method:testSetPrice()]"/>
  </testsuite>
</testrun>
